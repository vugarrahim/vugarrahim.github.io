# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-17 14:22
from __future__ import unicode_literals

import booking.utils.tools
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'Agents',
                'verbose_name': 'Agent',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'Balances',
                'permissions': (('balance_view', 'Can view Balance'), ('balance_all_view', 'Can view ALL Balances'), ('balance_object_owner', 'Can own Balance')),
                'verbose_name': 'Balance',
            },
        ),
        migrations.CreateModel(
            name='BookingCargoItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(max_length=25, verbose_name='Mark')),
                ('plate_no', models.CharField(max_length=25, verbose_name='Plate NO')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Booking Cargo Items',
                'permissions': (('bookingcargoitem_view', 'Can view Booking Cargo Item'), ('bookingcargoitem_all_view', 'Can view ALL Booking Cargo Item'), ('bookingcargoitem_super_create', 'Can super create Booking Cargo Item')),
                'verbose_name': 'Booking Cargo Item',
            },
        ),
        migrations.CreateModel(
            name='BookingInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(default=booking.utils.tools.rand_key, max_length=15, unique=True)),
                ('done', models.BooleanField(default=False, verbose_name='Done')),
                ('price', models.FloatField(blank=True, null=True)),
                ('booking_date', models.DateField(verbose_name='Booking date')),
                ('is_pay', models.BooleanField(default=False, verbose_name='Is Pay')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name_plural': 'Booking Information',
                'permissions': (('bookinginformation_view', 'Can view Booking'), ('bookinginformation_all_view', 'Can view ALL Bookings'), ('bookinginformation_super_create', 'Can SUPER create Booking'), ('bookinginformation_object_owner', 'Can own Booking')),
                'verbose_name': 'Booking Information',
            },
        ),
        migrations.CreateModel(
            name='BookingPassengerItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=25, verbose_name='First name')),
                ('last_name', models.CharField(max_length=25, verbose_name='Last name')),
                ('gender', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=2, verbose_name='Gender')),
                ('passport', models.CharField(max_length=25, verbose_name='Passport')),
                ('birth_date', models.DateField(verbose_name='Birth date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingInformation', verbose_name='Booking')),
            ],
            options={
                'verbose_name_plural': 'Booking Passenger Items',
                'permissions': (('bookingpassengeritem_view', 'Can view Booking Passenger Item'), ('bookingpassengeritem_all_view', 'Can view ALL Booking Passenger Item'), ('bookingpassengeritem_super_create', 'Can SUPER create Booking Passenger Item')),
                'verbose_name': 'Booking Passenger Item',
            },
        ),
        migrations.CreateModel(
            name='CargoType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('length', models.FloatField(verbose_name='Length')),
                ('height', models.FloatField(verbose_name='Height')),
            ],
            options={
                'verbose_name_plural': 'Cargo Types',
                'permissions': (('cargotypes_view', 'Can view CargoTypes'), ('cargotypes_all_view', 'Can view ALL CargoTypes')),
                'verbose_name': 'Cargo Type',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Directions',
                'permissions': (('directions_view', 'Can view Direction'), ('directions_all_view', 'Can view ALL Directions')),
                'verbose_name': 'Direction',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('is_pay', models.BooleanField(default=False, verbose_name='Payed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingInformation')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Invoices',
                'permissions': (('invoice_view', 'Can view Invoice'), ('invoice_all_view', 'Can view ALL Invoices'), ('invoice_object_owner', 'Can own Invoice')),
                'verbose_name': 'Invoice',
            },
        ),
        migrations.CreateModel(
            name='PassengerTransportType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Name')),
                ('passenger_count', models.IntegerField(verbose_name='Count')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Passenger Transport Types',
                'permissions': (('passengertransporttypes_view', 'Can view PassengerTransportTypes'), ('passengertransporttypes_all_view', 'Can view ALL PassengerTransportTypes')),
                'verbose_name': 'Passenger Transport Type',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ports',
                'permissions': (('ports_view', 'Can view Ports'), ('ports_all_view', 'Can view ALL Ports')),
                'verbose_name': 'Port',
            },
        ),
        migrations.CreateModel(
            name='PortFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Price')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Direction', verbose_name='Direction')),
                ('port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Port', verbose_name='Port')),
            ],
            options={
                'verbose_name_plural': 'PortFees',
                'verbose_name': 'PortFee',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('transaction_type', models.CharField(choices=[('income', 'income'), ('expense', 'expense')], max_length=10)),
                ('method', models.CharField(max_length=125)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Transactions',
                'permissions': (('transaction_view', 'Can view Transaction'), ('transaction_all_view', 'Can view ALL Transactions'), ('transaction_object_owner', 'Can own Transaction')),
                'verbose_name': 'Transaction',
            },
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('cargo_availability', models.BooleanField()),
                ('passenger_availability', models.BooleanField()),
                ('load_capacity', models.FloatField(verbose_name='Load Capacity')),
                ('imo', models.CharField(blank=True, max_length=50, null=True)),
                ('mmsi', models.CharField(blank=True, max_length=50, null=True)),
                ('call_sign', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Vessels',
                'permissions': (('vessels_view', 'Can view Vessel'), ('vessels_all_view', 'Can view ALL Vessels')),
                'verbose_name': 'Vessel',
            },
        ),
        migrations.CreateModel(
            name='VesselCargoFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Price')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cargo_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.CargoType', verbose_name='Cargo type')),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Direction', verbose_name='Direction')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Vessel', verbose_name='Vessel')),
            ],
            options={
                'verbose_name_plural': 'Vessel Cargo Fees',
                'permissions': (('vesselcargofees_view', 'Can view VesselCargoFees'), ('vesselcargofees_all_view', 'Can view ALL VesselCargoFees')),
                'verbose_name': 'Vessel Cargo Fee',
            },
        ),
        migrations.CreateModel(
            name='VesselPassengerCapacity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='Count')),
                ('passenger_transport_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.PassengerTransportType', verbose_name='Passenger transport type')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Vessel', verbose_name='Vessel')),
            ],
            options={
                'verbose_name_plural': 'Vessel Passenger Capacities',
                'verbose_name': 'Vessel Passenger Capacity',
            },
        ),
        migrations.CreateModel(
            name='VesselPassengerFee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Price')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Direction', verbose_name='Direction')),
                ('passenger_transport_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.PassengerTransportType', verbose_name='Passenger transport type')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Vessel', verbose_name='Vessel')),
            ],
            options={
                'verbose_name_plural': 'Vessel Passenger Fees',
                'verbose_name': 'Vessel Passenger Fee',
            },
        ),
        migrations.CreateModel(
            name='VesselsShedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateTimeField(verbose_name='Arrival date')),
                ('departure_date', models.DateTimeField(verbose_name='Departure date')),
                ('shedule_id', models.CharField(default=booking.utils.tools.rand_key, max_length=25, verbose_name='Shedule ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Direction', verbose_name='Direction')),
                ('vessel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.Vessel', verbose_name='Vessel')),
            ],
            options={
                'verbose_name_plural': 'PortsShedules',
                'permissions': (('portsshedule_view', 'Can view PortsShedule'), ('portsshedule_all_view', 'Can view ALL PortsShedule')),
                'verbose_name': 'PortsShedule',
            },
        ),
        migrations.AddField(
            model_name='direction',
            name='from_d',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_d', to='booking.Port', verbose_name='From'),
        ),
        migrations.AddField(
            model_name='direction',
            name='to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to', to='booking.Port', verbose_name='To'),
        ),
        migrations.AddField(
            model_name='bookingpassengeritem',
            name='passenger_transport_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.PassengerTransportType', verbose_name='Passenger transport type'),
        ),
        migrations.AddField(
            model_name='bookinginformation',
            name='vessel_shedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.VesselsShedule', verbose_name='Vessel'),
        ),
        migrations.AddField(
            model_name='bookingcargoitem',
            name='booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.BookingInformation', verbose_name='Booking'),
        ),
        migrations.AddField(
            model_name='bookingcargoitem',
            name='cargo_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.CargoType', verbose_name='Cargo type'),
        ),
        migrations.AlterUniqueTogether(
            name='portfee',
            unique_together=set([('port', 'direction')]),
        ),
        migrations.AlterUniqueTogether(
            name='direction',
            unique_together=set([('from_d', 'to')]),
        ),
    ]
